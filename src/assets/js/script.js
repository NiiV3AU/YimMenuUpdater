document.addEventListener("DOMContentLoaded",()=>{const savedPosition=sessionStorage.getItem("scrollPosition");if(savedPosition){document.documentElement.style.scrollBehavior="auto";window.scrollTo(0,parseInt(savedPosition,10));setTimeout(()=>{document.documentElement.style.scrollBehavior=""},0);sessionStorage.removeItem("scrollPosition")}const langLinks=document.querySelectorAll(".lang-options a");langLinks.forEach((link)=>{link.addEventListener("click",()=>{sessionStorage.setItem("scrollPosition",window.scrollY)})});const langDropdown=document.getElementById("lang-dropdown");const langToggleButton=document.getElementById("lang-toggle-btn");const langOptions=document.getElementById("lang-options");if(langDropdown&&langToggleButton&&langOptions){langToggleButton.addEventListener("click",()=>{const isVisible=langOptions.classList.toggle("is-visible");langToggleButton.setAttribute("aria-expanded",isVisible)})}window.addEventListener("click",(event)=>{if(langDropdown&&!langDropdown.contains(event.target)){langOptions.classList.remove("is-visible");langToggleButton.setAttribute("aria-expanded","false")}});const accordionHeaders=document.querySelectorAll(".changelog-summary, .faq-question");accordionHeaders.forEach((header)=>{header.addEventListener("click",()=>{const contentElement=header.nextElementSibling;const parentItem=header.parentElement;if(!contentElement){return}parentItem.classList.toggle("is-open")})});const menuToggle=document.querySelector(".mobile-menu-toggle");const mainNav=document.querySelector("#main-navigation");if(menuToggle&&mainNav){menuToggle.addEventListener("click",()=>{mainNav.classList.toggle("is-open");menuToggle.classList.toggle("is-active");const isExpanded=menuToggle.getAttribute("aria-expanded")==="true";menuToggle.setAttribute("aria-expanded",!isExpanded)});mainNav.addEventListener("click",(event)=>{if(event.target.tagName==="A"&&mainNav.classList.contains("is-open")){mainNav.classList.remove("is-open");menuToggle.classList.remove("is-active");menuToggle.setAttribute("aria-expanded","false")}})}else{console.warn("Mobile menu toggle button or main navigation not found.")}displayGitHubDownloads();const downloadButton=document.getElementById("download-btn-main");const downloadCountDisplay=document.getElementById("github-downloads");let visualIncrementDone=false;if(downloadButton&&downloadCountDisplay){downloadButton.addEventListener("click",(event)=>{if(!visualIncrementDone){const currentText=downloadCountDisplay.textContent;const currentCount=parseInt(currentText.replace(/[,.]/g,""),10);if(!isNaN(currentCount)){const newCount=currentCount+1;downloadCountDisplay.textContent=newCount.toLocaleString();visualIncrementDone=true;if(downloadCountDisplay){downloadCountDisplay.classList.add("count-updated");downloadCountDisplay.addEventListener("animationend",()=>{downloadCountDisplay.classList.remove("count-updated")},{once:true})}}else{console.log("Current download counter is not a number ('"+currentText+"'), visual increment skipped.")}}else{console.log("Visual increase already carried out.")}})}else{console.warn("Download button (#download-btn-main) or counter display (#github-downloads) not found for visual increase.")}document.querySelectorAll(".logo-text-link, .logo-text-short, .logo-separator").forEach((el)=>el.classList.add("logo-shimmer"));document.querySelectorAll(".logo-shimmer").forEach((el)=>{el.setAttribute("data-shimmer",(el.textContent||"").trim())});const galleryImages=document.querySelectorAll(".look-card");const lightboxOverlay=document.getElementById("lightbox-overlay");const lightboxImage=document.getElementById("lightbox-image");const lightboxClose=document.getElementById("lightbox-close");if(galleryImages.length>0&&lightboxOverlay){galleryImages.forEach((card)=>{card.addEventListener("click",()=>{const imageElement=card.querySelector("img");if(imageElement){lightboxImage.src=imageElement.src;lightboxOverlay.classList.add("is-visible")}})});const closeLightbox=()=>lightboxOverlay.classList.remove("is-visible");lightboxClose.addEventListener("click",closeLightbox);lightboxOverlay.addEventListener("click",(event)=>{if(event.target===lightboxOverlay){closeLightbox()}})}const fadeInElements=document.querySelectorAll(".fade-in");if(fadeInElements.length>0){const observer=new IntersectionObserver((entries)=>{entries.forEach((entry)=>{entry.target.classList.toggle("is-visible",entry.isIntersecting)})},{threshold:0.1});fadeInElements.forEach((element)=>observer.observe(element))}document.querySelectorAll('a[href^="#"]').forEach((anchor)=>{anchor.addEventListener("click",function(e){e.preventDefault();const href=this.getAttribute("href");if(href==="#"){window.scrollTo({top:0,behavior:"smooth"});return}const targetElement=document.querySelector(href);if(targetElement){const navbarHeight=document.querySelector(".header-sticky").offsetHeight;const targetPosition=targetElement.offsetTop-navbarHeight;window.scrollTo({top:targetPosition,behavior:"smooth"})}})});const animationToggleButton=document.getElementById("animation-toggle-btn");const animationTooltip=document.getElementById("animation-tooltip");if(animationToggleButton&&animationTooltip){animationToggleButton.addEventListener("mouseenter",()=>animationTooltip.classList.add("is-visible"));animationToggleButton.addEventListener("mouseleave",()=>animationTooltip.classList.remove("is-visible"))}const buttons=Array.from(document.querySelectorAll(".btn"));buttons.forEach(setupShimmerFor);if("ResizeObserver"in window){const ro=new ResizeObserver((entries)=>{for(const{target}of entries){setupShimmerFor(target)}});buttons.forEach((b)=>ro.observe(b))}else{window.addEventListener("resize",()=>buttons.forEach(setupShimmerFor))}const copyPipBtn=document.getElementById("copy-pip-btn");const pipCommand=document.getElementById("pip-command");if(copyPipBtn&&pipCommand){const copyIcon=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><rect height="13" rx="2" ry="2" width="13" x="9" y="9" /><path d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1" /></svg>`;const checkIcon=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><polyline points="20 6 9 17 4 12" /></svg>`;copyPipBtn.innerHTML=copyIcon;copyPipBtn.addEventListener("click",()=>{const commandText=pipCommand.textContent;navigator.clipboard.writeText(commandText).then(()=>{copyPipBtn.innerHTML=checkIcon;setTimeout(()=>{copyPipBtn.innerHTML=copyIcon},2000)}).catch((err)=>{console.error("Failed to copy text: ",err)})})}const consentBanner=document.getElementById("cookie-consent-banner");const acceptButton=document.getElementById("cookie-accept-btn");const privacyModalOverlay=document.getElementById("privacy-modal-overlay");const openPrivacyLinks=document.querySelectorAll("#privacy-policy-link, #cookie-banner-privacy-link");const closePrivacyModal=document.getElementById("privacy-modal-close");const CONSENT_KEY="ymu_privacy_consent";const showPrivacyModal=()=>{if(privacyModalOverlay){privacyModalOverlay.classList.add("is-visible")}};const hidePrivacyModal=()=>{if(privacyModalOverlay){privacyModalOverlay.classList.remove("is-visible")}};if(consentBanner&&!localStorage.getItem(CONSENT_KEY)){consentBanner.classList.add("is-visible")}if(acceptButton){acceptButton.addEventListener("click",()=>{localStorage.setItem(CONSENT_KEY,"true");consentBanner.classList.remove("is-visible")})}openPrivacyLinks.forEach((link)=>{link.addEventListener("click",(e)=>{e.preventDefault();e.stopPropagation();showPrivacyModal()})});if(closePrivacyModal){closePrivacyModal.addEventListener("click",hidePrivacyModal)}if(privacyModalOverlay){privacyModalOverlay.addEventListener("click",(event)=>{if(event.target===privacyModalOverlay){hidePrivacyModal()}})}});async function displayGitHubDownloads(){const githubUser="NiiV3AU";const githubRepo="YMU";const textElementId="github-downloads";const badgeElementId="github-downloads-badge";const cacheKey=`github_downloads_${ githubUser }_${ githubRepo }_all`;const cacheDurationMinutes=5;const textElement=document.getElementById(textElementId);const badgeElement=document.getElementById(badgeElementId);if(!textElement||!badgeElement){return}const showFallbackBadge=()=>{console.warn("Fallback to Badge activated.");textElement.style.display="none";badgeElement.src=`https://badgen.net/github/assets-dl/${ githubUser }/${ githubRepo }?label=&labelColor=black&color=black&cache=300`;badgeElement.style.display="inline"};const cachedData=sessionStorage.getItem(cacheKey);if(cachedData){try{const{count,timestamp}=JSON.parse(cachedData);const ageMinutes=(Date.now()-timestamp)/(1000*60);if(ageMinutes<cacheDurationMinutes){console.log("Using cached download count:",count);textElement.textContent=count.toLocaleString();textElement.style.display="inline";badgeElement.style.display="none";return}}catch(e){console.error("Error parsing cached data:",e)}}console.log("Fetching download count from GitHub API...");textElement.textContent="...";textElement.style.display="inline";badgeElement.style.display="none";try{const response=await fetch(`https://api.github.com/repos/${ githubUser }/${ githubRepo }/releases`);if(!response.ok){showFallbackBadge();return}const allReleases=await response.json();let currentTotal=0;if(Array.isArray(allReleases)&&allReleases.length>0){allReleases.forEach((release)=>{if(release.assets&&release.assets.length>0){release.assets.forEach((asset)=>{currentTotal+=asset.download_count})}});sessionStorage.setItem(cacheKey,JSON.stringify({count:currentTotal,timestamp:Date.now()}))}textElement.textContent=currentTotal.toLocaleString()}catch(error){console.error("Network or other error fetching downloads:",error);showFallbackBadge()}}const themeToggleButton=document.getElementById("theme-toggle-btn");const sunIcon=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" class="theme-toggle-icon" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><circle cx="12" cy="12" r="5" /><line x1="12" x2="12" y1="1" y2="3" /><line x1="12" x2="12" y1="21" y2="23" /><line x1="4.22" x2="5.64" y1="4.22" y2="5.64" /><line x1="18.36" x2="19.78" y1="18.36" y2="19.78" /><line x1="1" x2="3" y1="12" y2="12" /><line x1="21" x2="23" y1="12" y2="12" /><line x1="4.22" x2="5.64" y1="19.78" y2="18.36" /><line x1="18.36" x2="19.78" y1="5.64" y2="4.22" /></svg>`;const moonIcon=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" class="theme-toggle-icon" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z" /></svg>`;function updateThemeImages(theme){document.querySelectorAll("img.theme-img").forEach((img)=>{const target=theme==="light"?img.dataset.light||"":img.dataset.dark||"";if(!target||(img.src&&img.src.endsWith(target))){return}img.classList.add("is-swap");const pre=new Image();pre.onload=()=>{img.src=target;img.classList.remove("is-swap")};pre.src=target})}function applyTheme(theme){if(theme==="dark"){document.documentElement.setAttribute("data-theme","dark");if(themeToggleButton){themeToggleButton.innerHTML=sunIcon}}else{document.documentElement.removeAttribute("data-theme");if(themeToggleButton){themeToggleButton.innerHTML=moonIcon}}updateThemeImages(theme)}document.querySelectorAll("img.theme-img[data-light]").forEach((img)=>{new Image().src=img.dataset.light});const savedTheme=localStorage.getItem("theme");const prefersDark=window.matchMedia("(prefers-color-scheme: dark)").matches;applyTheme(savedTheme||(prefersDark?"dark":"light"));if(themeToggleButton){themeToggleButton.addEventListener("click",()=>{const currentTheme=document.documentElement.getAttribute("data-theme")?"dark":"light";const newTheme=currentTheme==="dark"?"light":"dark";localStorage.setItem("theme",newTheme);applyTheme(newTheme)})}const animationToggleButton=document.getElementById("animation-toggle-btn");const motionIcon=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" class="animation-toggle-icon" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><polyline points="22 12 18 12 15 21 9 3 6 12 2 12" /></svg>`;const noMotionIcon=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"  class="animation-toggle-icon" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><circle cx="12" cy="12" r="10" /><line x1="10" x2="10" y1="15" y2="9" /><line x1="14" x2="14" y1="15" y2="9" /></svg>`;function applyAnimationPreference(preference){if(!animationToggleButton){return}if(preference==="disabled"){document.body.classList.add("animations-disabled");animationToggleButton.innerHTML=motionIcon}else{document.body.classList.remove("animations-disabled");animationToggleButton.innerHTML=noMotionIcon}}const savedAnimationPref=localStorage.getItem("animations");const prefersReducedMotion=window.matchMedia("(prefers-reduced-motion: reduce)").matches;applyAnimationPreference(savedAnimationPref||(prefersReducedMotion?"disabled":"enabled"));if(animationToggleButton){animationToggleButton.addEventListener("click",()=>{const isDisabled=document.body.classList.contains("animations-disabled");const newPreference=isDisabled?"enabled":"disabled";localStorage.setItem("animations",newPreference);applyAnimationPreference(newPreference)})}function setupShimmerFor(btn){const cs=getComputedStyle(btn);const stripe=parseFloat(cs.getPropertyValue("--shim-width"))||120;const overshoot=parseFloat(cs.getPropertyValue("--shim-overshoot"))||60;const w=btn.getBoundingClientRect().width;const distance=w+stripe+2*overshoot;const endX=w+overshoot;btn.style.setProperty("--shim-end-x",`${ endX }px`);btn.style.setProperty("--shim-dur",`${(distance/420).toFixed(3)}s`);btn.addEventListener("pointerenter",()=>{btn.classList.add("reboot");requestAnimationFrame(()=>btn.classList.remove("reboot"))})}
